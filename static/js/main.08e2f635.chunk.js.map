{"version":3,"sources":["components/Notification/Notification.module.css","components/ContactForm/ContactForm.module.css","components/TabletShape/TabletShape.module.css","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/TabletShape/TabletShape.js","components/App.js","index.js","components/ContactItem/ContactItem.module.css"],"names":["module","exports","Notification","title","className","styles","defaultProps","rules","name","number","messages","ContactForm","state","errors","InputNameId","uuidv4","InputNuberId","handleChange","target","value","setState","handleSubmit","e","onAddContact","props","preventDefault","validateAll","then","data","console","log","reset","catch","formatedErrors","forEach","error","field","message","this","onSubmit","htmlFor","id","type","onChange","autoComplete","button","Component","ContactItem","contactItem","onRemoveContact","container","buttonDelete","onClick","ContactList","contacts","length","map","item","key","Filter","hanleFilterChange","TabletShape","children","screen","logo","App","filter","hasContact","some","toLowerCase","addToContacts","alert","contact","removeContact","persistedContacts","localStorage","getItem","JSON","parse","prevState","setItem","stringify","includes","filteredContacts","applyFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08e2f635.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2vzo1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TabletShape\":\"TabletShape_TabletShape__2DpLB\",\"screen\":\"TabletShape_screen__3Y64q\",\"logo\":\"TabletShape_logo__2K-NR\"};","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ title }) => (\n  <span className={styles.Notification}>{title}</span>\n);\n\nNotification.defaultProps = {\n  title: null,\n};\n\nNotification.propTypes = {\n  title: propTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { validateAll } from 'indicative/validator';\nimport Notification from '../Notification/Notification';\nimport styles from './ContactForm.module.css';\n\nconst rules = {\n  name: 'required | string',\n  number: 'required|min:2|number',\n};\n\nconst messages = {\n  'name.required': 'Please choose a name for contact',\n  'number.required': 'Please enter a number',\n  'number.min': 'Number must be at least 2 characters',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    title: propTypes.string.isRequired,\n    onAddContact: propTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    errors: null,\n  };\n\n  InputNameId = uuidv4();\n\n  InputNuberId = uuidv4();\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { onAddContact } = this.props;\n    e.preventDefault();\n\n    validateAll(this.state, rules, messages)\n      .then(data => {\n        console.log(data);\n        onAddContact({ ...this.state });\n        this.reset();\n      })\n      .catch(errors => {\n        console.log(errors);\n        const formatedErrors = {};\n\n        errors.forEach(error => {\n          formatedErrors[error.field] = error.message;\n        });\n        this.setState({\n          errors: formatedErrors,\n        });\n      });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '', errors: null });\n  };\n\n  render() {\n    const { title } = this.props;\n    const { name, number, errors } = this.state;\n\n    return (\n      <div>\n        <h3>{title}</h3>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor={this.InputNameId}>Name:</label>\n            <input\n              name=\"name\"\n              id={this.InputNameId}\n              type=\"text\"\n              onChange={this.handleChange}\n              value={name}\n              autoComplete=\"off\"\n            />\n            {errors && <Notification title={errors.name} />}\n          </div>\n          <div>\n            <label htmlFor={this.InputNuberId}>Number:</label>\n            <input\n              name=\"number\"\n              id={this.InputNuberId}\n              type=\"number\"\n              onChange={this.handleChange}\n              value={number}\n              autoComplete=\"off\"\n            />\n            {errors && <Notification title={errors.number} />}\n          </div>\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ contactItem, onRemoveContact }) => {\n  const { name, number } = contactItem;\n\n  return (\n    <div className={styles.container}>\n      <p>\n        {name}\n        <span> : </span>\n        <span>{number}</span>\n      </p>\n      <button\n        className={styles.buttonDelete}\n        onClick={onRemoveContact}\n        type=\"button\"\n      >\n        {null}\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contactItem: propTypes.shape({\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired,\n  }).isRequired,\n  onRemoveContact: propTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    contacts.length > 0 && (\n      <ul>\n        {contacts.map(item => {\n          return (\n            <li key={item.id}>\n              <ContactItem\n                contactItem={item}\n                onRemoveContact={() => onRemoveContact(item.id)}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: propTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ hanleFilterChange }) => {\n  return (\n    <div>\n      <h3>Find your contact:</h3>\n      <input type=\"text\" onChange={hanleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  hanleFilterChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styles from './TabletShape.module.css';\n\nconst TabletShape = ({ children }) => {\n  return (\n    <div className={styles.TabletShape}>\n      <div className={styles.screen}>{children}</div>\n      <div className={styles.logo}> GoIT </div>\n    </div>\n  );\n};\n\nexport default TabletShape;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport TabletShape from './TabletShape/TabletShape';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  hasContact = name => {\n    const { contacts } = this.state;\n    return contacts.some(\n      item => item.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  addToContacts = ({ name, number }) => {\n    const isAlreadyinContacts = this.hasContact(name);\n\n    if (isAlreadyinContacts) {\n      // eslint-disable-next-line no-alert\n      alert(`Already in contacts ${name}`);\n    } else {\n      const contact = {\n        name,\n        number,\n        id: uuidv4(),\n      };\n      this.setState(state => {\n        return { contacts: [...state.contacts, contact] };\n      });\n    }\n  };\n\n  removeContact = id => {\n    this.setState(state => {\n      const contacts = state.contacts.filter(contact => contact.id !== id);\n      const filter = contacts.length > 1 ? state.filter : '';\n      return { contacts, filter };\n    });\n  };\n\n  hanleFilterChange = e => {\n    const { value } = e.target;\n    this.setState({\n      filter: value,\n    });\n  };\n\n  applyFilter() {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n  render() {\n    const { contacts } = this.state;\n\n    const filteredContacts = this.applyFilter();\n\n    return (\n      <TabletShape>\n        <ContactForm title=\"Phonebook\" onAddContact={this.addToContacts} />\n        {contacts.length > 1 && (\n          <Filter hanleFilterChange={this.hanleFilterChange} />\n        )}\n        <ContactList\n          contacts={filteredContacts}\n          onRemoveContact={this.removeContact}\n        />\n      </TabletShape>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactItem_container__1aoJL\",\"buttonDelete\":\"ContactItem_buttonDelete__25tYo\"};"],"sourceRoot":""}